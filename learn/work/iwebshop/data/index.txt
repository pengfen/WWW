navicate ---> 设计表 ---> 索引 ---> 名(自定义) 栏位(选择对应的字段名) 类型(可选择 unique 唯一索引 normal 普通索引 full text 全文索引) 方法(btree hash)

选择索引时，需要考虑数据列的基数。所谓基数，是指数据列所包含的不同的数据的个数。如果基数相对于数据表行数较高的话，索引的效果比较好。换句话说，就是指数据列的不同的值越多，索引效果越好。如果一个数据列只包含：0或者1两个值的话，索引的用处就不大。如果值出现的几率几乎相等，那么无论搜索哪个值都可能得到一半的数据行。在这些情况下，最好根本不要使用索引

Hash 索引效率高 但常用Btree
（1）Hash 索引仅仅能满足"=","IN"和"<=>"查询，不能使用范围查询。
（2）Hash 索引无法被用来避免数据的排序操作。
（3）Hash 索引不能利用部分索引键查询。
（4）Hash 索引在任何时候都不能避免表扫描。
（5）Hash 索引遇到大量Hash值相等的情况后性能并不一定就会比B-Tree索引高。

ALTER TABLE `onramp_bolt_seller`
ADD UNIQUE INDEX `declaraNo` (`declaraNo`) USING BTREE ;